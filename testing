Drupal Panelizer Cleanup Script (SQL + PHP + Drush)
üî∏ Step 1: SQL Query ‚Äî Identify Revisions Referencing Broken Blocks

SELECT pe.entity_id, pe.revision_id, pd.configuration
FROM panelizer_entity pe
JOIN panels_display pd ON pe.did = pd.did
WHERE pd.configuration LIKE '%b443ae9f-c0af-45a3-a9a2-c7edb1e97901%'
   OR pd.configuration LIKE '%b443ae9f-c0af-45a3-a9a2-c7edb1e97902%'
   OR pd.configuration LIKE '%b443ae9f-c0af-45a3-a9a2-c7edb1e97903%'
   OR pd.configuration LIKE '%b443ae9f-c0af-45a3-a9a2-c7edb1e97904%';

‡§Ø‡§π query ‡§â‡§® revisions ‡§ï‡•ã ‡§¶‡§ø‡§ñ‡§æ‡§è‡§ó‡•Ä ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•á ‡§¶‡§ø‡§è ‡§ó‡§è UUIDs referenced ‡§π‡•à‡§Ç‡•§


Step 2: PHP Script ‚Äî Remove Broken Block References Programmatically
<?php
use Drupal\Core\Database\Database;
use Drupal\Core\Config\ConfigFactoryInterface;

$broken_uuids = [
  'b443ae9f-c0af-45a3-a9a2-c7edb1e97901',
  'b443ae9f-c0af-45a3-a9a2-c7edb1e97902',
  'b443ae9f-c0af-45a3-a9a2-c7edb1e97903',
  'b443ae9f-c0af-45a3-a9a2-c7edb1e97904',
];

foreach ($broken_uuids as $uuid) {
  $blocks = \Drupal::entityTypeManager()
    ->getStorage('block_content')
    ->loadByProperties(['uuid' => $uuid]);

  if (empty($blocks)) {
    echo "‚ùå Missing block: $uuid\n";
    // Delete config reference
    \Drupal::configFactory()->getEditable("block.block.$uuid")->delete();
    \Drupal::configFactory()->getEditable("layout_builder.layout.$uuid")->delete();
  } else {
    echo "‚úÖ Block exists: $uuid\n";
  }
}


Step 3: Optional ‚Äî Delete Orphaned Panelizer Revisions
DELETE FROM panelizer_entity
WHERE did NOT IN (
  SELECT did FROM panelizer_defaults
);

step 4) drush cr


----------------------------------------------------------------------------------------------
#!/bin/bash

echo "üîç Starting Drupal Panelizer revision cleanup..."

# Define broken block UUIDs
broken_uuids=(
  "b443ae9f-c0af-45a3-a9a2-c7edb1e97901"
  "b443ae9f-c0af-45a3-a9a2-c7edb1e97902"
  "b443ae9f-c0af-45a3-a9a2-c7edb1e97903"
  "b443ae9f-c0af-45a3-a9a2-c7edb1e97904"
)

# Step 1: Remove config and layout references for broken blocks
for uuid in "${broken_uuids[@]}"
do
  echo "üßº Cleaning block UUID: $uuid"
  drush config:delete "block.block.$uuid"
  drush config:delete "layout_builder.layout.$uuid"
done

# Step 2: Delete orphaned panelizer revisions from database
echo "üóëÔ∏è Removing orphaned panelizer revisions..."
drush sqlq "DELETE FROM panelizer_entity WHERE did NOT IN (SELECT did FROM panelizer_defaults);"

# Step 3: Clear Drupal cache
echo "‚ôªÔ∏è Clearing Drupal cache..."
drush cr

echo "‚úÖ Cleanup complete!"

chmod +x cleanup_panelizer.sh
./cleanup_panelizer.sh

Option 1: Recreate Missing Blocks
‡§Ü‡§™ manually ‡§á‡§® UUIDs ‡§ï‡•á ‡§∏‡§æ‡§• dummy blocks create ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø migration smooth ‡§π‡•ã ‡§ú‡§æ‡§è‡•§

‚úÖ Option 2: Remove Affected Revisions
‡§â‡§® revisions ‡§ï‡•ã database ‡§∏‡•á delete ‡§ï‡§∞‡•á‡§Ç ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç ‡§Ø‡•á blocks referenced ‡§π‡•à‡§Ç‡•§

‡§á‡§∏‡§∏‡•á migration ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§¨‡§ø‡§®‡§æ error ‡§ï‡•á‡•§

‚úÖ Option 3: Patch ‡§Ø‡§æ Script ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç
Drupal community ‡§®‡•á ‡§á‡§∏ issue ‡§ï‡•ã fix ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•Å‡§õ patches ‡§î‡§∞ cleanup strategies suggest ‡§ï‡•Ä ‡§π‡•à‡§Ç‡•§

‡§Ü‡§™ custom script ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡•ã revisions ‡§ï‡•ã scan ‡§ï‡§∞‡§ï‡•á broken UUIDs ‡§ï‡•ã remove ‡§Ø‡§æ replace ‡§ï‡§∞ ‡§¶‡•á‡•§



